apiVersion: apps/v1
kind: Deployment
metadata:
  name: truckat-redis-deployment
  labels:
    app: redis
    role: primary
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
      role: primary
  template:
    metadata:
      labels:
        app: redis
        role: primary
    spec:
      containers:
        - name: redis
          image: redis:7.2.4
          ports:
            - containerPort: 6379
          livenessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"

---

apiVersion: v1
kind: Service
metadata:
  name: truckat-redis-service
spec:
  selector:
    app: redis
    role: primary
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
  type: ClusterIP

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: truckat-redis-replica-deployment
  labels:
    app: redis
    role: replica
spec:
  replicas: 3
  selector:
    matchLabels:
      app: redis
      role: replica
  template:
    metadata:
      labels:
        app: redis
        role: replica
    spec:
      initContainers:
        - name: wait-for-redis
          image: busybox
          command: ['sh', '-c', 'until nc -z truckat-redis-service 6379; do echo waiting for redis; sleep 2; done;']
      containers:
        - name: redis-replica
          image: redis:7.2.4
          ports:
            - containerPort: 6379
          command: ["redis-server", "--replicaof", "truckat-redis-service", "6379", "--replica-read-only", "yes", "--port", "6379"]
          livenessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"

---

apiVersion: v1
kind: Service
metadata:
  name: truckat-redis-replica-service
spec:
  selector:
    app: redis
    role: replica
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
  type: ClusterIP

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: truckat-node-redis-deployment
  labels:
    app: truckat-node-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: truckat-node-redis
  template:
    metadata:
      labels:
        app: truckat-node-redis
    spec:
      containers:
        - name: truckat-node-redis
          image: arthurescriou/node-redis:1.0.5
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          env:
            - name: PORT
              value: "8080"
            - name: REDIS_URL
              value: redis://truckat-redis-service.default.svc.cluster.local:6379
            - name: REDIS_REPLICAS_URL
              value: redis://truckat-redis-replica-service.default.svc.cluster.local:6379
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "1000m"
              memory: "512Mi"

---

apiVersion: v1
kind: Service
metadata:
  name: truckat-node-redis-service
spec:
  selector:
    app: truckat-node-redis
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: LoadBalancer

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: truckat-frontend-deployment
  labels:
    app: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: 21310174/truckat_img:1.0.6
          ports:
            - containerPort: 7654
          env:
            - name: BACKEND_URL
              value: http://truckat-node-redis-service:8080
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"

---

apiVersion: v1
kind: Service
metadata:
  name: truckat-frontend-service
spec:
  selector:
    app: frontend
  ports:
    - protocol: TCP
      port: 7654
      targetPort: 7654
  type: LoadBalancer

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: truckat-node-redis-autoscaler
  annotations:
    hpa.kubernetes.io/scale-down-delay: "300s"
    hpa.kubernetes.io/scale-up-delay: "60s"
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: truckat-node-redis-deployment
  minReplicas: 2
  maxReplicas: 15
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 4
        periodSeconds: 15
      selectPolicy: Max

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: truckat-redis-replica-hpa
  annotations:
    hpa.kubernetes.io/scale-down-delay: "300s"
    hpa.kubernetes.io/scale-up-delay: "60s"
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: truckat-redis-replica-deployment
  minReplicas: 2
  maxReplicas: 8
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 60
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 75
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 2
        periodSeconds: 15
      selectPolicy: Max

